{"version":3,"file":"static/js/58.20406045.chunk.js","mappings":"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","sources":["GlobalStyles.styled.jsx","components/Contacts/PhoneBook.styled.jsx","components/Contacts/components/Contacts/Contacts.styled.jsx","components/Contacts/components/ContactItem/ContactItem.styled.jsx","components/Contacts/components/Modal/Modal.styled.jsx","components/Contacts/components/Button/Button.Styled.jsx","components/Contacts/components/Form/Form.styled.jsx","components/Contacts/components/Form/Form.jsx","components/Contacts/components/Modal/Modal.jsx","components/Contacts/components/ContactItem/ContactItem.jsx","components/Contacts/components/Contacts/Contacts.jsx","components/Contacts/components/Filter/Filter.styled.jsx","components/Contacts/components/Filter/Filter.jsx","components/Contacts/components/NavBar/NavBar.styled.jsx","components/Contacts/components/NavBar/NavBar.jsx","components/Contacts/PhoneBook.js","utils/utils.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nimport { Button } from '@mui/material';\nimport { secondColor, buttonColor } from 'components/AppMainStyled.styled';\n\nexport const ViewContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  height: 100vh;\n  align-items: center;\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: #4b4e62;\n  transition: 800ms;\n  :hover {\n    text-decoration: underline;\n    color: black;\n  }\n`;\n\nexport const StyledButton = styled(Button)`\n  min-width: 100px;\n  background-color: ${buttonColor};\n  &:hover,\n  :focus {\n    background-color: ${secondColor};\n  }\n`;\n","import styled from '@emotion/styled';\nimport { bgColor } from 'components/AppMainStyled.styled';\nexport const Container = styled.div`\n  width: 100vw;\n  padding-bottom: 2vh;\n  padding-top: 2vh;\n  margin: 0 auto;\n  margin-bottom: 2vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: ${bgColor};\n  color: white;\n  height: 100vh;\n`;\n","import styled from '@emotion/styled';\n// import Button from '@mui/material/Button';\n\nexport const StyledContList = styled.ul`\n  width: 480px;\n  overflow-y: scroll;\n  margin: 10px 10px;\n  border: 1px solid wheat;\n  border-radius: 6px;\n`;\n","import styled from '@emotion/styled';\n\nimport { AiFillDelete, AiFillEdit } from 'react-icons/ai';\nimport { MdDeleteOutline, MdAutoDelete } from 'react-icons/md';\nimport { FaUserEdit } from 'react-icons/fa';\n\nexport const StyledItem = styled.li`\n  display: flex;\n  margin-top: 10px;\n  transition: 500ms;\n  border-radius: 4px;\n  justify-content: space-between;\n  padding-left: 20px;\n  padding-right: 20px;\n  /* padding-right: 5px; */\n  outline: none;\n  align-items: center;\n\n  cursor: pointer;\n\n  &:hover {\n    background-color: rgba(204, 204, 204, 0.65);\n  }\n\n  &.vissible {\n    background-color: rgba(204, 204, 204, 0.45);\n    transition: 500ms;\n  }\n`;\nexport const TextBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 65%;\n`;\nexport const StyledButton = styled.button`\n  display: block;\n  width: 70px;\n  margin-left: 5px;\n  background-color: transparent;\n  border-color: transparent;\n  border-radius: 6px;\n  color: transparent;\n  transition: 500ms;\n  visibility: hidden;\n  &[disabled] {\n    border-color: gray !important;\n    background-color: #f5deb385 !important;\n  }\n  &.show {\n    visibility: visible;\n    transition: 500ms;\n    background-color: #726885;\n    color: wheat;\n    border-color: black;\n\n    &:hover,\n    :focus {\n      background-color: #7f7197;\n      color: white;\n      border-color: wheat;\n    }\n  }\n`;\nexport const DeleteIcon = styled(AiFillDelete)`\n  height: 30px;\n  width: 30px;\n  fill: rgba(245, 222, 179, 0.5);\n  transition: 500ms;\n  border-radius: 50%;\n\n  &:hover,\n  :focus {\n    fill: white;\n  }\n`;\nexport const EditIcon = styled(FaUserEdit)`\n  height: 30px;\n  width: 30px;\n  fill: rgba(245, 222, 179, 0.5);\n  transition: 500ms;\n\n  &:hover,\n  :focus {\n    fill: white;\n  }\n`;\nexport const PreDeleteIcon = styled(MdDeleteOutline)`\n  height: 22px;\n  width: 22px;\n  fill: rgba(245, 222, 179, 0.5);\n`;\nexport const PreEditIcon = styled(AiFillEdit)`\n  height: 25px;\n  width: 25px;\n  fill: rgba(245, 222, 179, 0.5);\n`;\nexport const DeleteOnLoadIcon = styled(MdAutoDelete)`\n  height: 25px;\n  width: 25px;\n  fill: #fff;\n  margin-right: 35px;\n`;\n","import styled from '@emotion/styled';\n\n// export const ModalOverlay = styled.div`\n//   position: absolute;\n//   top: 50%;\n//   left: 50%;\n//   transform: translate(-50% -50%);\n//   /* overflow: hidden; */\n\n//   z-index: 2;\n// `;\nexport const BackDrop = styled.div`\n  position: fixed;\n  top: 0%;\n  right: 0%;\n  left: 0%;\n  bottom: 0%;\n  background-color: #2c2732df;\n  z-index: 1;\n  overflow: hidden;\n`;\n","import styled from '@emotion/styled';\n\nexport const StyledButton = styled.button`\n  display: block;\n  width: 120px;\n  margin-top: 10px;\n  background-color: #726885;\n  border-radius: 6px;\n  color: wheat;\n  transition: 350ms;\n  &:hover,\n  :focus {\n    background-color: #7f7197;\n    color: white;\n    border-color: wheat;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\nimport { StyledButton } from 'components/Contacts/components/Button/Button.Styled';\n// import { Formik, Field, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 300px;\n  border: 1px solid wheat;\n  border-radius: 6px;\n  padding: 20px;\n`;\nexport const Item = styled(Field)`\n  display: flex;\n  flex-direction: column;\n  width: 250px;\n  border-radius: 6px;\n  background-color: wheat;\n`;\n\nexport const FormBox = styled.div`\n  /* position: relative; */\n\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const CloseButton = styled(StyledButton)`\n  width: 30px;\n  position: absolute;\n  top: -5px;\n  right: 5px;\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport {\n  StyledForm,\n  Item,\n  FormBox,\n  CloseButton,\n} from 'components/Contacts/components/Form/Form.styled';\nimport { StyledButton } from 'components/Contacts/components/Button/Button.Styled';\nimport { notify, isContactDubled, schema } from 'utils/utils';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useGetContactsQuery } from 'redux/contacts/createApi';\n// import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { selector } from 'redux/contacts/modalSlice';\nimport PropTypes from 'prop-types';\n\nexport const MyForm = ({\n  mutator,\n  initialFormValues,\n  btn1,\n  btn2,\n  id,\n  name,\n}) => {\n  const dispatch = useDispatch();\n\n  const { data: contacts = [] } = useGetContactsQuery();\n  // const contacts = useSelector(state => state.contacts);\n\n  const handleSubmit = async (values, { resetForm }) => {\n    if (\n      (isContactDubled(contacts, values, 'name') ||\n        isContactDubled(contacts, values, 'number')) &&\n      name === 'AddContact'\n    ) {\n      notify();\n      return;\n    }\n    try {\n      await mutator({ id, ...values });\n      resetForm();\n      dispatch(selector(false));\n    } catch (error) {\n      console.log(error);\n      dispatch(selector(false));\n    }\n  };\n\n  return (\n    <FormBox>\n      <ToastContainer />\n      <Formik\n        initialValues={initialFormValues}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        {({ handleReset }) => (\n          <StyledForm>\n            <label htmlFor=\"\">\n              Name\n              <Item type=\"text\" name=\"name\" />\n              <ErrorMessage name=\"name\" />\n            </label>\n            <label htmlFor=\"\">\n              Number\n              <Item type=\"tel\" name=\"number\" />\n              <ErrorMessage name=\"number\" />\n            </label>\n            <StyledButton type=\"submit\">{btn1}</StyledButton>\n            <StyledButton type=\"button\" onClick={() => handleReset()}>\n              {btn2}\n            </StyledButton>\n          </StyledForm>\n        )}\n      </Formik>\n      <CloseButton onClick={e => dispatch(selector(false))}>\n        &times;\n      </CloseButton>\n    </FormBox>\n  );\n};\n\nMyForm.propTypes = {\n  values: PropTypes.object,\n  contacts: PropTypes.array,\n  mutator: PropTypes.func,\n  initialFormValues: PropTypes.object,\n  btn1: PropTypes.string,\n  btn2: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n};\n","import { BackDrop } from './Modal.styled';\nimport {\n  useEditContactMutation,\n  useGetContactsQuery,\n} from 'redux/contacts/createApi';\nimport { MyForm } from 'components/Contacts/components/Form/Form';\nimport PropTypes from 'prop-types';\n\nexport const Modal = ({ id }) => {\n  const [editContact, { isLoading }] = useEditContactMutation();\n  const { data: contacts = [] } = useGetContactsQuery();\n  const contact = contacts.find(c => c.id === id);\n\n  isLoading && document.querySelector('body').classList.remove('fixed');\n  return (\n    <>\n      <BackDrop>\n        {contact && (\n          <MyForm\n            mutator={editContact}\n            initialFormValues={{ name: contact.name, number: contact.number }}\n            btn1=\"Edit Contact\"\n            btn2=\"Reload Data\"\n            id={contact.id}\n            name=\"Edit Contact\"\n          />\n        )}\n      </BackDrop>\n    </>\n  );\n};\n\nMyForm.propTypes = {\n  id: PropTypes.string,\n};\n","import {\n  StyledItem,\n  // StyledButton,\n  TextBox,\n  DeleteIcon,\n  EditIcon,\n  PreDeleteIcon,\n  PreEditIcon,\n  DeleteOnLoadIcon,\n} from './ContactItem.styled';\n\nimport { useState } from 'react';\nimport { useDeleteContactMutation } from 'redux/contacts/createApi';\n\nimport PropTypes from 'prop-types';\n\nimport { useDispatch } from 'react-redux';\nimport { selector, contactId } from 'redux/contacts/modalSlice';\nimport { Modal } from 'components/Contacts/components/Modal/Modal';\nimport { useSelector } from 'react-redux';\n\nexport const ContactItem = ({ contact }) => {\n  const { name, number, id } = contact;\n  const [show, setShow] = useState(false);\n\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n\n  const dispatch = useDispatch();\n  const modalSelector = useSelector(state => state.modal.selector);\n  const modalIdSelector = useSelector(state => state.modal.contactId);\n\n  const onEnter = e => {\n    e.currentTarget.classList.add('vissible');\n    e.currentTarget.id === contact.id && setShow(true);\n  };\n\n  const handleDelete = e => {\n    deleteContact(e.currentTarget.parentElement.id);\n  };\n\n  const handleEdit = e => {\n    const id = e.currentTarget.parentElement.id;\n    dispatch(selector('edit'));\n    dispatch(contactId(id));\n\n    document.querySelector('body').classList.add('fixed');\n  };\n  const onBlur = e => {\n    document\n      .querySelectorAll('.vissible')\n      .forEach(n => n.classList.remove('vissible'));\n    setShow(false);\n  };\n\n  return (\n    <>\n      <StyledItem\n        id={id}\n        onClick={onEnter}\n        onFocus={onEnter}\n        onBlur={onBlur}\n        tabIndex={1}\n      >\n        <TextBox>\n          <span>{name}</span>\n          <span>{number}</span>\n        </TextBox>\n        {isLoading ? (\n          <DeleteOnLoadIcon />\n        ) : show ? (\n          <DeleteIcon onClick={handleDelete} />\n        ) : (\n          <PreDeleteIcon />\n        )}\n        {!isLoading &&\n          (show ? <EditIcon onClick={handleEdit} /> : <PreEditIcon />)}\n      </StyledItem>\n      {modalSelector === 'edit' && id === modalIdSelector && (\n        <Modal id={id}></Modal>\n      )}\n    </>\n  );\n};\n\nContactItem.prototype = {\n  filteredContacts: PropTypes.array,\n  contacts: PropTypes.array,\n  modalSelector: PropTypes.string,\n  modalIdSelector: PropTypes.number,\n};\n","import { StyledContList } from './Contacts.styled';\nimport { useSelector } from 'react-redux';\nimport { getFilter } from 'redux/contacts/filterSlice';\nimport { useGetContactsQuery } from 'redux/contacts/createApi';\n// import { useDispatch } from 'react-redux';\n// import * as contactsOperation from 'redux/contacts/contactsOperation';\n// import { useEffect } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { ContactItem } from 'components/Contacts/components/ContactItem/ContactItem';\nimport { useMemo } from 'react';\n\nexport const Contacts = () => {\n  // const dispatch = useDispatch();\n  // const contacts = useSelector(state => state.contacts);\n  // useEffect(() => {\n  //   dispatch(contactsOperation.getContacts());\n  // }, [dispatch]);\n\n  const filter = useSelector(getFilter);\n  const { data: contacts = [] } = useGetContactsQuery();\n\n  const filteredContacts = useMemo(() => {\n    return contacts.filter(contact => {\n      return contact.name\n        .toLocaleLowerCase()\n        .includes(filter.toLocaleLowerCase());\n    });\n  }, [contacts, filter]);\n\n  const shownContacts = filter !== '' ? filteredContacts : contacts;\n\n  return (\n    <StyledContList>\n      {shownContacts.map(contact => {\n        return <ContactItem contact={contact} key={contact.id} />;\n      })}\n    </StyledContList>\n  );\n};\n\nContacts.prototype = {\n  filteredContacts: PropTypes.array,\n  filter: PropTypes.string,\n  contacts: PropTypes.array,\n};\n","import styled from '@emotion/styled';\n\nexport const StyledLabel = styled.label`\n  display: flex;\n  margin-top: 10px;\n`;\n\nexport const StyledImput = styled.input`\n  margin-left: 10px;\n  border-radius: 6px;\n  background-color: wheat;\n`;\n","import { StyledLabel, StyledImput } from './Filter.styled';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { filterContact } from 'redux/contacts/filterSlice';\nimport { useGetContactsQuery } from 'redux/contacts/createApi';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const inputHandler = e => {\n    const { value } = e.currentTarget;\n    dispatch(filterContact(value));\n  };\n  const { data: contacts } = useGetContactsQuery();\n\n  return (\n    <>\n      {contacts?.length !== 0 ? (\n        <>\n          <h2>Contacts:</h2>\n          <StyledLabel>\n            Find my contacts by name\n            <StyledImput type=\"text\" name=\"filter\" onChange={inputHandler} />\n          </StyledLabel>\n        </>\n      ) : (\n        <h2>Contact list is empty:</h2>\n      )}\n    </>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  contacts: PropTypes.array,\n};\n","import styled from '@emotion/styled';\nexport const PhoneBookHeader = styled.h1`\n  margin-bottom: 20px;\n`;\nexport const PhoneBookBox = styled.div`\n  margin-bottom: 20px;\n`;\n","import { useCreateContactMutation } from 'redux/contacts/createApi';\nimport { BackDrop } from 'components/Contacts/components/Modal/Modal.styled';\nimport { PhoneBookHeader, PhoneBookBox } from './NavBar.styled';\nimport { MyForm } from 'components/Contacts/components/Form/Form.jsx';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selector } from 'redux/contacts/modalSlice';\nimport PropTypes from 'prop-types';\n// import { Button } from '@mui/material';\nimport { RiUserAddLine } from 'react-icons/ri';\nimport { StyledButton } from '../../../../GlobalStyles.styled';\n\nexport const NavBar = () => {\n  const modalSelector = useSelector(state => state.modal.selector);\n  const dispatch = useDispatch();\n  const [addContact] = useCreateContactMutation();\n\n  const addContactModal = e => {\n    dispatch(selector('add'));\n  };\n\n  return (\n    <PhoneBookBox>\n      <PhoneBookHeader>Phonebook</PhoneBookHeader>\n      {!modalSelector && (\n        // <StyledButton onClick={addContactModal}>Add Contact</StyledButton>\n        <StyledButton\n          variant=\"contained\"\n          endIcon={<RiUserAddLine />}\n          color=\"primary\"\n          onClick={addContactModal}\n        >\n          Add Contact\n        </StyledButton>\n      )}\n      {modalSelector === 'add' && (\n        <BackDrop>\n          <MyForm\n            mutator={addContact}\n            initialFormValues={{ name: '', number: '' }}\n            btn1=\"Add Contact\"\n            btn2=\"Clear Form\"\n            name=\"AddContact\"\n          />\n        </BackDrop>\n      )}\n    </PhoneBookBox>\n  );\n};\n\nMyForm.propTypes = {\n  modalSelector: PropTypes.string,\n};\n","import './PhoneBook.styled.jsx';\nimport { Container } from 'components/Contacts/PhoneBook.styled';\nimport { Contacts } from 'components/Contacts/components/Contacts/Contacts.jsx';\nimport { Filter } from 'components/Contacts/components/Filter/Filter.jsx';\nimport { NavBar } from 'components/Contacts/components/NavBar/NavBar.jsx';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst PhoneBook = () => {\n  return (\n    <Container>\n      <NavBar />\n      <Filter />\n      <Contacts />\n    </Container>\n  );\n};\nexport default PhoneBook;\n","import { toast } from 'react-toastify';\nimport * as yup from 'yup';\n\nexport const notify = () =>\n  toast.warn('That NAME or NUMBER already exist', {\n    position: toast.POSITION.TOP_CENTER,\n    autoClose: 1000,\n  });\n\nexport const isContactDubled = (arr, data, key) => {\n  return arr.some(\n    contact =>\n      contact[key].toLocaleLowerCase() === data[key].toLocaleLowerCase()\n  );\n};\n\nconst phoneRegExp =\n  /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/;\nconst nameRegExp = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\nexport const schema = yup.object().shape({\n  name: yup.string().matches(nameRegExp, 'Name is not valid').required(),\n  number: yup\n    .string()\n    .matches(phoneRegExp, 'Phone number is not valid')\n    .max(12)\n    .required(),\n});\n\n// export const emailRegexp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\nexport const emailRegexp = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\nexport const nameRegexp = /^[A-Za-z][A-Za-z0-9_]{2,20}$/; //name must contain 1-19 symbols (A-Z,a-z,0-9)\n\nexport const passwordRegexp = /^[A-Za-z][A-Za-z0-9_]{2,19}$/; //password must contain 1-19 symbols (A-Z,a-z,0-9)\n"],"names":["ViewContainer","styled","StyledButton","Link","Button","buttonColor","secondColor","Container","bgColor","StyledContList","StyledItem","TextBox","DeleteIcon","AiFillDelete","EditIcon","FaUserEdit","PreDeleteIcon","MdDeleteOutline","PreEditIcon","AiFillEdit","DeleteOnLoadIcon","MdAutoDelete","BackDrop","StyledForm","Form","Item","Field","FormBox","CloseButton","MyForm","mutator","initialFormValues","btn1","btn2","id","name","dispatch","useDispatch","useGetContactsQuery","data","contacts","handleSubmit","values","resetForm","isContactDubled","notify","selector","console","log","initialValues","onSubmit","validationSchema","schema","handleReset","htmlFor","type","onClick","e","Modal","useEditContactMutation","editContact","isLoading","contact","find","c","document","querySelector","classList","remove","number","propTypes","PropTypes","ContactItem","useState","show","setShow","useDeleteContactMutation","deleteContact","modalSelector","useSelector","state","modal","modalIdSelector","contactId","onEnter","currentTarget","add","onFocus","onBlur","querySelectorAll","forEach","n","tabIndex","parentElement","prototype","filteredContacts","Contacts","filter","getFilter","useMemo","toLocaleLowerCase","includes","shownContacts","map","StyledLabel","StyledImput","Filter","length","onChange","value","filterContact","PhoneBookHeader","PhoneBookBox","NavBar","useCreateContactMutation","addContact","variant","endIcon","color","toast","position","autoClose","arr","key","some","yup","shape","matches","required","max","emailRegexp","nameRegexp","passwordRegexp"],"sourceRoot":""}