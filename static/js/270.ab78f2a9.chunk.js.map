{"version":3,"file":"static/js/270.ab78f2a9.chunk.js","mappings":"wXAoBA,SAASA,EAAUC,GACjB,OACE,UAACC,EAAA,GAAD,gBACEC,QAAQ,QACRC,MAAM,iBACNC,MAAM,UACFJ,GAJN,cAMG,mBACD,SAACK,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,mBAA3B,0BAEQ,KACP,IAAIC,MAAOC,cACX,QAKP,IAAMC,GAAQC,EAAAA,EAAAA,KAEC,SAASC,IAAU,IAAD,EAC/B,GAA6BC,EAAAA,EAAAA,UAAS,IAAtC,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA+BF,EAAAA,EAAAA,UAAS,IAAxC,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAAqCJ,EAAAA,EAAAA,UAAS,IAA9C,eAAOK,EAAP,KAAsBC,EAAtB,KACA,GAAkCN,EAAAA,EAAAA,YAAlC,eAAOO,EAAP,KAAkBC,EAAlB,KACA,GAAoCR,EAAAA,EAAAA,YAApC,eAAOS,EAAP,KAAmBC,EAAnB,KACA,GAA0CV,EAAAA,EAAAA,YAA1C,eAAOW,EAAP,KAAsBC,EAAtB,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,cAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACL,SAATD,GAAmBd,EAAQe,GAClB,UAATD,GAAoBZ,EAASa,GACpB,aAATD,GAAuBV,EAAYW,IAG/BC,EAAa,SAAAJ,GACjB,MAAwBA,EAAEC,cAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,GAAa,SAATD,EAAiB,CACnB,IAAIG,EAAU,IAAIC,OAAOC,EAAAA,IAAYC,KAAKL,IACzCE,GAAWX,EAAa,gDACzBW,GAAWX,EAAa,MACxBe,QAAQC,IAAI,UAAWL,GAEzB,GAAa,UAATH,EAAkB,CACpB,IAAIS,EAAW,IAAIL,OAAOM,EAAAA,IAAaJ,KAAKL,IAC3CQ,GAAYf,EAAc,wBAC3Be,GAAYf,EAAc,MAC1Ba,QAAQC,IAAI,WAAYC,GAG1B,GAAa,aAATT,EAAqB,CACvB,IAAIW,EAAc,IAAIP,OAAOQ,EAAAA,IAAgBN,KAAKL,IACjDU,GACCf,EAAiB,oDACnBe,GAAef,EAAiB,MAChCW,QAAQC,IAAI,WAAYG,KAGtBE,GAAWC,EAAAA,EAAAA,MAejB,OACE,SAACC,EAAA,EAAD,CAAelC,MAAOA,EAAtB,UACE,UAACmC,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,WACE,SAACC,EAAA,GAAD,KACA,UAACC,EAAA,EAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAACC,EAAA,EAAD,CAAQL,GAAI,CAAEM,EAAG,EAAGC,QAAS,kBAA7B,UACE,SAACC,EAAA,EAAD,OAEF,SAACxD,EAAA,EAAD,CAAY4C,UAAU,KAAK3C,QAAQ,KAAnC,sBAGA,UAAC8C,EAAA,EAAD,CACEH,UAAU,OACVa,YAAU,EACVC,SAnCW,SAAAC,GACnBA,EAAMC,iBACN,MAAkCD,EAAMjC,cAAcmC,SAA9ClC,EAAR,EAAQA,KAAMmC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,SAEfC,EAAO,CACXrC,KAAMA,EAAKC,MACXkC,MAAOA,EAAMlC,MACbmC,SAAUA,EAASnC,OAErBM,QAAQC,IAAI6B,GACZxB,EAASyB,EAAAA,GAAwBD,IACjCL,EAAMjC,cAAcwC,SAyBZlB,GAAI,CAAEmB,GAAI,GAJZ,WAME,UAACC,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,WACE,SAACF,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACE,SAACC,EAAA,EAAD,CACEC,MAAOC,QAAQzD,GACf0D,WAAY1D,EACZ2D,aAAa,aACblD,KAAK,OACLmD,KAAK,OACLC,UAAQ,EACRC,WAAS,EACTC,GAAG,OACHC,MAAM,OACNC,WAAS,EACTvD,MAAOhB,EACPwE,SAAU5D,EACV6D,OAAQxD,OAIZ,SAACuC,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACE,SAACC,EAAA,EAAD,CACEC,MAAOC,QAAQvD,GACfwD,WAAYxD,EACZ2D,UAAQ,EACRC,WAAS,EACTE,MAAM,gBACND,GAAG,QACHH,KAAK,QACLnD,KAAK,QACLkD,aAAa,QACbO,SAAU5D,EACVI,MAAOd,EACPuE,OAAQxD,OAGZ,SAACuC,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACE,SAACC,EAAA,EAAD,CACEC,MAAOC,QAAQrD,GACfsD,WAAYtD,EACZyD,UAAQ,EACRC,WAAS,EACTrD,KAAK,WACLuD,MAAM,WACNJ,KAAK,WACLG,GAAG,WACHJ,aAAa,eACbO,SAAU5D,EACVI,MAAOZ,EACPqE,OAAQxD,UAId,SAACyD,EAAA,EAAD,CACER,KAAK,SACLE,WAAS,EACT/E,QAAQ,YACRsF,SAAUZ,QAAO,iBAACvD,QAAD,IAACA,EAAAA,EAAcF,SAAf,QAA4BI,GAC7C0B,GAAI,CAAEmB,GAAI,EAAGqB,GAAI,GALnB,sBASA,SAACpB,EAAA,GAAD,CAAMC,WAAS,EAACoB,eAAe,WAA/B,UACE,SAACrB,EAAA,GAAD,CAAMG,MAAI,EAAV,UACE,SAACnE,EAAA,EAAD,CAAMC,KAAK,oCAAoCJ,QAAQ,QAAvD,yDAOR,SAACH,EAAD,CAAWkD,GAAI,CAAEmB,GAAI,UC1L7B,IAGA,EAHqB,WACnB,OAAO,SAACzD,EAAD,M,sMCCIgF,EAAS,kBACpBC,EAAAA,GAAAA,KAAW,oCAAqC,CAC9CC,SAAUD,EAAAA,GAAAA,SAAAA,WACVE,UAAW,OAGFC,EAAkB,SAACC,EAAK/B,EAAMgC,GACzC,OAAOD,EAAIE,MACT,SAAAC,GAAO,OACLA,EAAQF,GAAKG,sBAAwBnC,EAAKgC,GAAKG,wBAOxCC,EAASC,EAAAA,KAAaC,MAAM,CACvC3E,KAAM0E,EAAAA,KAAaE,QAFF,yHAEsB,qBAAqBxB,WAC5DyB,OAAQH,EAAAA,KAELE,QANH,kFAMwB,6BACrBE,IAAI,IACJ1B,aAKQ1C,EAAc,8CAEdL,EAAa,+BAEbO,EAAiB","sources":["components/SingUp/SignUp.js","components/views/RegisterView/RegisterView.jsx","utils/utils.js"],"sourcesContent":["import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\n// import FormControlLabel from '@mui/material/FormControlLabel';\n// import Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useDispatch } from 'react-redux';\n// import * as authOperations from '../redux/auth/authOperations';\nimport * as authOperations from '../../redux/auth/authOperations';\nimport { useState } from 'react';\nimport { emailRegexp, nameRegexp, passwordRegexp } from 'utils/utils';\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nexport default function SignUp() {\n  const [nameField, setName] = useState('');\n  const [emailField, setEmail] = useState('');\n  const [passwordField, setPassword] = useState('');\n  const [nameError, setNameError] = useState();\n  const [emailError, setEmailError] = useState();\n  const [passwordError, setPasswordError] = useState();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    name === 'name' && setName(value);\n    name === 'email' && setEmail(value);\n    name === 'password' && setPassword(value);\n  };\n\n  const handleBlur = e => {\n    const { name, value } = e.currentTarget;\n    if (name === 'name') {\n      let regName = new RegExp(nameRegexp).test(value);\n      !regName && setNameError('name must contain 3-22 symbols (A-Z,a-z,0-9)');\n      regName && setNameError(null);\n      console.log('regName', regName);\n    }\n    if (name === 'email') {\n      let regEmail = new RegExp(emailRegexp).test(value);\n      !regEmail && setEmailError('Invalid email format');\n      regEmail && setEmailError(null);\n      console.log('regEmail', regEmail);\n    }\n\n    if (name === 'password') {\n      let regPassword = new RegExp(passwordRegexp).test(value);\n      !regPassword &&\n        setPasswordError('password must contain 3-22 symbols (A-Z,a-z,0-9)');\n      regPassword && setPasswordError(null);\n      console.log('regEmail', regPassword);\n    }\n  };\n  const dispatch = useDispatch();\n  const handleSubmit = event => {\n    event.preventDefault();\n    const { name, email, password } = event.currentTarget.elements;\n\n    const data = {\n      name: name.value,\n      email: email.value,\n      password: password.value,\n    };\n    console.log(data);\n    dispatch(authOperations.register(data));\n    event.currentTarget.reset();\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleSubmit}\n            sx={{ mt: 3 }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  error={Boolean(nameError)}\n                  helperText={nameError}\n                  autoComplete=\"given-name\"\n                  name=\"name\"\n                  type=\"text\"\n                  required\n                  fullWidth\n                  id=\"name\"\n                  label=\"Name\"\n                  autoFocus\n                  value={nameField}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  error={Boolean(emailError)}\n                  helperText={emailError}\n                  required\n                  fullWidth\n                  label=\"Email Address\"\n                  id=\"email\"\n                  type=\"email\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  onChange={handleChange}\n                  value={emailField}\n                  onBlur={handleBlur}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  error={Boolean(passwordError)}\n                  helperText={passwordError}\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"new-password\"\n                  onChange={handleChange}\n                  value={passwordField}\n                  onBlur={handleBlur}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              disabled={Boolean(emailError ?? nameError ?? passwordError)}\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link href=\"/goit-react-hw-08-phonebook/login\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        <Copyright sx={{ mt: 5 }} />\n      </Container>\n    </ThemeProvider>\n  );\n}\n","import SignUp from 'components/SingUp/SignUp';\nconst RegisterView = () => {\n  return <SignUp />;\n};\nexport default RegisterView;\n","import { toast } from 'react-toastify';\nimport * as yup from 'yup';\n\nexport const notify = () =>\n  toast.warn('That NAME or NUMBER already exist', {\n    position: toast.POSITION.TOP_CENTER,\n    autoClose: 1000,\n  });\n\nexport const isContactDubled = (arr, data, key) => {\n  return arr.some(\n    contact =>\n      contact[key].toLocaleLowerCase() === data[key].toLocaleLowerCase()\n  );\n};\n\nconst phoneRegExp =\n  /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/;\nconst nameRegExp = /^[a-zA-ZÐ°-ÑÐ-Ð¯]+(([' -][a-zA-ZÐ°-ÑÐ-Ð¯ ])?[a-zA-ZÐ°-ÑÐ-Ð¯]*)*$/;\nexport const schema = yup.object().shape({\n  name: yup.string().matches(nameRegExp, 'Name is not valid').required(),\n  number: yup\n    .string()\n    .matches(phoneRegExp, 'Phone number is not valid')\n    .max(12)\n    .required(),\n});\n\n// export const emailRegexp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\nexport const emailRegexp = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\nexport const nameRegexp = /^[A-Za-z][A-Za-z0-9_]{2,20}$/; //name must contain 1-19 symbols (A-Z,a-z,0-9)\n\nexport const passwordRegexp = /^[A-Za-z][A-Za-z0-9_]{2,19}$/; //password must contain 1-19 symbols (A-Z,a-z,0-9)\n"],"names":["Copyright","props","Typography","variant","color","align","Link","href","Date","getFullYear","theme","createTheme","SignUp","useState","nameField","setName","emailField","setEmail","passwordField","setPassword","nameError","setNameError","emailError","setEmailError","passwordError","setPasswordError","handleChange","e","currentTarget","name","value","handleBlur","regName","RegExp","nameRegexp","test","console","log","regEmail","emailRegexp","regPassword","passwordRegexp","dispatch","useDispatch","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","noValidate","onSubmit","event","preventDefault","elements","email","password","data","authOperations","reset","mt","Grid","container","spacing","item","xs","TextField","error","Boolean","helperText","autoComplete","type","required","fullWidth","id","label","autoFocus","onChange","onBlur","Button","disabled","mb","justifyContent","notify","toast","position","autoClose","isContactDubled","arr","key","some","contact","toLocaleLowerCase","schema","yup","shape","matches","number","max"],"sourceRoot":""}